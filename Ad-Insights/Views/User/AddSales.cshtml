@model Ad_Insights_DataAccessLayer.Transactions

@{
    ViewBag.Title = "AddSales";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/Admin.css" rel="stylesheet" />
<script>
    function clickAlert() {
        //debugger;
        alert("Product detail successfully added");
        window.location.href = '@Url.Action("AddSales","User")';
    }
</script>
<h2>Add Products</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.ProductID, new SelectList(ViewBag.Category as System.Collections.IEnumerable, "CategoryID", "CategoryName"),
               "Choose Category",
               htmlAttributes: new { @class = "form-control", @id = "GetProductCategory" })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductDetail, new SelectList(Enumerable.Empty<SelectListItem>(), "ProductID", "ProductName"), "Choose Product",
               htmlAttributes: new { @class = "form-control" , @id = "GetProductName" })
                @Html.ValidationMessageFor(model => model.ProductDetail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @pattern = "^[1-9]*$" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{ if (ViewBag.Message != null)
                    {
                        <span style="color:green;">@ViewBag.Message</span>

                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Add" onclick="clickAlert()" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    $(document).ready(function () {
        $("#GetProductCategory").change(function () {
            var ctegoryID = $(this).val();
            $.ajax({
                url: "/User/GetPNameByCategory",
                type: 'GET',
                datatype: "json",
                data: { categoryId: ctegoryID },
                success: function (product) {
                    console.log(product);
                    $('#GetProductName').html('');
                    $.each(product, function (index, itemData) {
                        //                 //alert(product);
                        //                 //alert(itemData);
                        $('#GetProductName').append
                            ('<option value="' + itemData.Value + '">' + itemData.Text + '</option>');
                    });
                },
            });
        });
    });

</script>
<script>
    function clickAlert() {
        //debugger;
        alert("Sales detail successfully added");
        window.location.href = '@Url.Action("ProductDetail","Admin")';
        @*if (confirm("Do You want to Cancel?")) {
            window.location.href = '@Url.Action("Login","Login")';
            return false;
        }
        else {
             window.location.href = '@Url.Action("Register","Login")';*@
        }
    }
</script>


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
